version: '3.8'

services:
  user_db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db
    volumes:
      - user_db_data:/var/lib/postgresql/data
    ports:
      - "${USER_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d user_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - backend

  cats_db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cats_db
    volumes:
      - cats_db_data:/var/lib/postgresql/data
    ports:
      - "${CATS_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d cats_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - backend

  auth:
    build: ./backend/services/auth
    container_name: auth_service
    depends_on:
      - user_db
      - discovery
      - config
    networks:
      - backend

  cats:
    build: ./backend/services/cats
    container_name: cats_service
    depends_on:
      - cats_db
      - discovery
      - config
    networks:
      - backend

  gateway:
    build: ./backend/services/gateway
    container_name: gateway_service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - auth
      - cats
      - discovery
    networks:
      - backend

  discovery:
    build: ./backend/services/discovery
    container_name: discovery_service
    networks:
      - backend

  config:
    build: ./backend/services/config
    container_name: config_service
    depends_on:
      - discovery
    networks:
      - backend

  frontend:
    build: ./frontend
    container_name: frontend_service
    ports:
      - "3000:3000"
    depends_on:
      - gateway
    networks:
      - backend

volumes:
  user_db_data:
  cats_db_data:

networks:
  backend:
    driver: bridge
